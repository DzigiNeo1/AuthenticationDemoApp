{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dzigi\\\\Downloads\\\\AUTHENTICATION PROJECT\\\\01-starting-project\\\\src\\\\store\\\\auth-context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext({\n  token: \"\",\n  isLoggedIn: false,\n  login: token => {},\n  logout: () => {}\n});\n\nconst calculateRemainingTime = expirationTime => {\n  const currentTime = new Date().getTime();\n  const adjExpirationTime = new Date(expirationTime).getTime();\n  const remainingTime = adjExpirationTime - currentTime;\n  return remainingTime;\n};\n\nexport const AuthContextProvider = props => {\n  _s();\n\n  const initalToken = localStorage.getItem('token');\n  const [token, setToken] = useState(initalToken);\n  const userIsLoggedIn = !!token;\n\n  const logoutHandler = () => {\n    setToken(null);\n    localStorage.removeItem('token');\n  };\n\n  const loginHandler = (token, expirationTime) => {\n    setToken(token);\n    localStorage.setItem('token', token);\n  };\n\n  setTimeout(logoutHandler, remainingDuration);\n  const contextValue = {\n    token: token,\n    isLoggedIn: userIsLoggedIn,\n    login: loginHandler,\n    logout: logoutHandler\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextValue,\n    children: [props.children, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 10\n  }, this);\n};\n\n_s(AuthContextProvider, \"vKySgeSLpG8QGEvGghXvIh9zgNY=\");\n\n_c = AuthContextProvider;\nexport default AuthContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["C:/Users/Dzigi/Downloads/AUTHENTICATION PROJECT/01-starting-project/src/store/auth-context.js"],"names":["React","useState","AuthContext","createContext","token","isLoggedIn","login","logout","calculateRemainingTime","expirationTime","currentTime","Date","getTime","adjExpirationTime","remainingTime","AuthContextProvider","props","initalToken","localStorage","getItem","setToken","userIsLoggedIn","logoutHandler","removeItem","loginHandler","setItem","setTimeout","remainingDuration","contextValue","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;AACA,MAAMC,WAAW,gBAAGF,KAAK,CAACG,aAAN,CAAoB;AACtCC,EAAAA,KAAK,EAAE,EAD+B;AAEtCC,EAAAA,UAAU,EAAE,KAF0B;AAGtCC,EAAAA,KAAK,EAAGF,KAAD,IAAW,CAAE,CAHkB;AAItCG,EAAAA,MAAM,EAAE,MAAM,CAAE;AAJsB,CAApB,CAApB;;AAOE,MAAMC,sBAAsB,GAAIC,cAAD,IAAoB;AACjD,QAAMC,WAAW,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAApB;AACA,QAAMC,iBAAiB,GAAG,IAAIF,IAAJ,CAASF,cAAT,EAAyBG,OAAzB,EAA1B;AAEA,QAAME,aAAa,GAAGD,iBAAiB,GAAGH,WAA1C;AAED,SAAOI,aAAP;AACA,CAPD;;AASA,OAAO,MAAMC,mBAAmB,GAAIC,KAAD,IAAW;AAAA;;AAC5C,QAAMC,WAAW,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAApB;AACA,QAAM,CAACf,KAAD,EAAQgB,QAAR,IAAoBnB,QAAQ,CAACgB,WAAD,CAAlC;AACA,QAAMI,cAAc,GAAG,CAAC,CAACjB,KAAzB;;AAEA,QAAMkB,aAAa,GAAG,MAAM;AACzBF,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACAF,IAAAA,YAAY,CAACK,UAAb,CAAwB,OAAxB;AACF,GAHD;;AAKA,QAAMC,YAAY,GAAG,CAACpB,KAAD,EAAOK,cAAP,KAA0B;AAC7CW,IAAAA,QAAQ,CAAChB,KAAD,CAAR;AACAc,IAAAA,YAAY,CAACO,OAAb,CAAqB,OAArB,EAA8BrB,KAA9B;AACD,GAHD;;AAOAsB,EAAAA,UAAU,CAACJ,aAAD,EAAgBK,iBAAhB,CAAV;AAGA,QAAMC,YAAY,GAAG;AACrBxB,IAAAA,KAAK,EAAEA,KADc;AAErBC,IAAAA,UAAU,EAACgB,cAFU;AAGrBf,IAAAA,KAAK,EAACkB,YAHe;AAIrBjB,IAAAA,MAAM,EAACe;AAJc,GAArB;AAOF,sBAAO,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEM,YAA7B;AAAA,eAA4CZ,KAAK,CAACa,QAAlD;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CA5BQ;;GAAMd,mB;;KAAAA,mB;AA+Bf,eAAeb,WAAf","sourcesContent":["import React, {useState} from \"react\";\r\nconst AuthContext = React.createContext({\r\n  token: \"\",\r\n  isLoggedIn: false,\r\n  login: (token) => {},\r\n  logout: () => {},\r\n});\r\n\r\n  const calculateRemainingTime = (expirationTime) => {\r\n    const currentTime = new Date().getTime();\r\n    const adjExpirationTime = new Date(expirationTime).getTime();\r\n    \r\n    const remainingTime = adjExpirationTime - currentTime;\r\n\r\n   return remainingTime;\r\n  }\r\n\r\n  export const AuthContextProvider = (props) => {\r\n    const initalToken = localStorage.getItem('token')\r\n    const [token, setToken] = useState(initalToken)\r\n    const userIsLoggedIn = !!token;\r\n    \r\n    const logoutHandler = () => {\r\n       setToken(null)\r\n       localStorage.removeItem('token')\r\n    }\r\n     \r\n    const loginHandler = (token,expirationTime) => {\r\n      setToken(token);\r\n      localStorage.setItem('token', token)\r\n    }\r\n\r\n   \r\n      \r\n    setTimeout(logoutHandler, remainingDuration)\r\n\r\n\r\n    const contextValue = {\r\n    token: token,\r\n    isLoggedIn:userIsLoggedIn,\r\n    login:loginHandler,\r\n    logout:logoutHandler\r\n    }\r\n\r\n  return <AuthContext.Provider value={contextValue}>{props.children} </AuthContext.Provider>;\r\n};\r\n\r\n\r\nexport default AuthContext;"]},"metadata":{},"sourceType":"module"}